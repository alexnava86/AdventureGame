trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  unityImage: 'gableroux/unity3d:2019.4.28f1'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.x.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    echo "Pulling Unity Docker Image"
    docker pull $(unityImage)
  displayName: 'Pull Unity Docker Image'

- script: |
    echo "Running Unity Build in Docker"
    docker run --rm \
      -v $(Build.SourcesDirectory):/project \
      -v $(Build.ArtifactStagingDirectory):/project/Builds \
      -w /project \
      $(unityImage) \
      /opt/Unity/Editor/Unity \
      -quit -batchmode -nographics \
      -logFile /dev/stdout \
      -projectPath /project \
      -buildTarget StandaloneWindows64 \
      -executeMethod BuildScript.Build
  displayName: 'Build Unity Project with Docker'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
