trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  unityVersion: '2019.4.28f1'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.x.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'UnityHubSetup.exe'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    mkdir unity
    Start-Process -FilePath $(Agent.TempDirectory)\UnityHubSetup.exe -ArgumentList "/S /D=$(Agent.ToolsDirectory)\unity" -Wait
    $(Agent.ToolsDirectory)\unity\UnityHub.exe install -i $(unityVersion) --cm "$(Agent.ToolsDirectory)\unity"
  displayName: 'Install Unity'

- script: |
    $(Agent.ToolsDirectory)\unity\UnityHub\Editor\$(unityVersion)\Editor\Unity.exe -quit -batchmode -logFile -projectPath $(Build.SourcesDirectory) -buildTarget StandaloneWindows64 -buildTargetPlatform Win64 -executeMethod BuildScript.Build
  displayName: 'Build Unity Project'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)\Builds'
    contents: '**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
